// <auto-generated />
using System;
using FormCreateProject.AppDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FormCreateProject.Migrations
{
    [DbContext(typeof(FormDbContext))]
    [Migration("20230428004049_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FormCreateProject.Entities.Concrete.Form", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CretedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("FormCreateProject.Entities.Concrete.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d3e44ff1-8035-4ebc-b5d0-f892805ae5b3"),
                            DataType = "string",
                            Name = "Ad",
                            Required = true
                        },
                        new
                        {
                            Id = new Guid("50a89be0-a453-4a57-a79f-a082cf8bb1b5"),
                            DataType = "string",
                            Name = "Soyad",
                            Required = true
                        },
                        new
                        {
                            Id = new Guid("6ed88bde-7df9-442c-bffa-7d1432b9ae1c"),
                            DataType = "number",
                            Name = "Yaş",
                            Required = false
                        },
                        new
                        {
                            Id = new Guid("c0a49fd8-6ddf-459d-9ca4-595b1d0e9cb5"),
                            DataType = "date",
                            Name = "Doğum Tarihi",
                            Required = false
                        },
                        new
                        {
                            Id = new Guid("3754554c-5d99-477c-b36e-a1cf946a236a"),
                            DataType = "email",
                            Name = "E-posta",
                            Required = false
                        },
                        new
                        {
                            Id = new Guid("ef932071-800b-4935-a569-a2f7a24c2072"),
                            DataType = "number",
                            Name = "Telefon",
                            Required = false
                        });
                });

            modelBuilder.Entity("FormCreateProject.Entities.Concrete.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b45526d9-aba0-4474-929d-e39ad9ff09e0"),
                            FirstName = "Büşra",
                            LastName = "Yumuşakkaya",
                            Name = "BusraYumusakkaya",
                            Password = "Busra123."
                        });
                });

            modelBuilder.Entity("FormQuestion", b =>
                {
                    b.Property<Guid>("FormsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuestionsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FormsId", "QuestionsId");

                    b.HasIndex("QuestionsId");

                    b.ToTable("FormQuestion");
                });

            modelBuilder.Entity("FormQuestion", b =>
                {
                    b.HasOne("FormCreateProject.Entities.Concrete.Form", null)
                        .WithMany()
                        .HasForeignKey("FormsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FormCreateProject.Entities.Concrete.Question", null)
                        .WithMany()
                        .HasForeignKey("QuestionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using FormCreateProject.AppDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FormCreateProject.Migrations
{
    [DbContext(typeof(FormDbContext))]
    partial class FormDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ContentQuestion", b =>
                {
                    b.Property<Guid>("ContentsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuestionsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ContentsId", "QuestionsId");

                    b.HasIndex("QuestionsId");

                    b.ToTable("ContentQuestion");
                });

            modelBuilder.Entity("FormCreateProject.Entities.Concrete.Content", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FormId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("Contents");
                });

            modelBuilder.Entity("FormCreateProject.Entities.Concrete.Form", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CretedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("FormCreateProject.Entities.Concrete.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8bf1f399-1c49-4a8e-be94-44b972938d49"),
                            DataType = "STRING",
                            Name = "Ad",
                            Required = true
                        },
                        new
                        {
                            Id = new Guid("d29e4ce3-49a8-47e4-91dc-36438893d4b2"),
                            DataType = "STRING",
                            Name = "Soyad",
                            Required = true
                        },
                        new
                        {
                            Id = new Guid("2ae495af-f15d-45e4-842e-7b4a10e978a3"),
                            DataType = "NUMBER",
                            Name = "Yaş",
                            Required = false
                        },
                        new
                        {
                            Id = new Guid("3518a9e2-8fab-49d7-8f1b-84304d903cfb"),
                            DataType = "DATETIME",
                            Name = "Doğum Tarihi",
                            Required = false
                        },
                        new
                        {
                            Id = new Guid("b2fb5a11-c777-4b29-9e72-dc11b758ba26"),
                            DataType = "STRING",
                            Name = "E-posta",
                            Required = false
                        },
                        new
                        {
                            Id = new Guid("5566de4b-f191-4b17-91a0-3e697a8b982e"),
                            DataType = "STRING",
                            Name = "Telefon",
                            Required = false
                        });
                });

            modelBuilder.Entity("FormCreateProject.Entities.Concrete.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("47f5e209-320e-468f-b70d-c6e404343dc4"),
                            FirstName = "Büşra",
                            LastName = "Yumuşakkaya",
                            Name = "BusraYumusakkaya",
                            Password = "Busra123."
                        });
                });

            modelBuilder.Entity("ContentQuestion", b =>
                {
                    b.HasOne("FormCreateProject.Entities.Concrete.Content", null)
                        .WithMany()
                        .HasForeignKey("ContentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FormCreateProject.Entities.Concrete.Question", null)
                        .WithMany()
                        .HasForeignKey("QuestionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FormCreateProject.Entities.Concrete.Content", b =>
                {
                    b.HasOne("FormCreateProject.Entities.Concrete.Form", "Form")
                        .WithMany("Contents")
                        .HasForeignKey("FormId");

                    b.Navigation("Form");
                });

            modelBuilder.Entity("FormCreateProject.Entities.Concrete.Form", b =>
                {
                    b.Navigation("Contents");
                });
#pragma warning restore 612, 618
        }
    }
}
